/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var S=Object.create;var m=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var k=(a,i)=>{for(var t in i)m(a,t,{get:i[t],enumerable:!0})},w=(a,i,t,n)=>{if(i&&typeof i=="object"||typeof i=="function")for(let e of E(i))!T.call(a,e)&&e!==t&&m(a,e,{get:()=>i[e],enumerable:!(n=x(i,e))||n.enumerable});return a};var L=(a,i,t)=>(t=a!=null?S(I(a)):{},w(i||!a||!a.__esModule?m(t,"default",{value:a,enumerable:!0}):t,a)),R=a=>w(m({},"__esModule",{value:!0}),a);var W={};k(W,{default:()=>g});module.exports=R(W);var r=require("obsidian"),b=require("util"),y=L(require("fs/promises")),f={blurSize:240};async function C(a,i,t,n){let e=n,h=3,o=document.createElement("canvas"),c=o.getContext("2d",{alpha:!1}),P=await y.readFile(a),s=await new Promise(l=>{let d=new Image;d.onload=()=>l(d),d.src=URL.createObjectURL(new Blob([P]))});o.width=s.width+e*2,o.height=s.height+e*2,c.imageSmoothingQuality="high",c.drawImage(s,e,e),[[e,e,s.width,1,e,0,s.width,e],[e,s.height+e-1,s.width,1,e,s.height+e,s.width,e],[e,e,1,s.height,0,e,e,s.height],[s.width+e-1,e,1,s.height,s.width+e,e,e,s.height]].forEach(l=>c.drawImage(o,...l));let v=c.getImageData(e,e,1,1);[[0,0],[s.width+e,0],[0,s.height+e],[s.width+e,s.height+e]].forEach(([l,d])=>c.putImageData(v,l,d));let z=e/Math.sqrt(3);c.filter=`blur(${z}px)`;for(let l=0;l<h;l++)c.drawImage(o,0,0);let u=document.createElement("canvas");return u.width=i,u.height=t,u.getContext("2d",{alpha:!1}).drawImage(o,e,e,s.width,s.height,0,0,i,t),URL.revokeObjectURL(s.src),u.toDataURL("image/jpeg",.9).split(",")[1]}var g=class extends r.Plugin{constructor(){super(...arguments);this.styleEl=document.createElement("style");this.exec=(0,b.promisify)(require("child_process").exec);this.lastPosition={x:0,y:0,width:0,height:0};this.frameRequest=null;this.resizeTimer=null;this.isInitialized=!1}async onload(){await this.loadSettings(),this.addSettingTab(new p(this.app,this)),this.app.workspace.onLayoutReady(async()=>{this.isInitialized||!r.Platform.isWin||(this.isInitialized=!0,await this.initializeWallpaper(),document.body.classList.add("is-translucent"))})}async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings),this.isInitialized&&(this.styleEl.remove(),document.body.classList.remove("is-translucent"),this.isInitialized=!1,this.app.workspace.onLayoutReady(async()=>{this.isInitialized||!r.Platform.isWin||(this.isInitialized=!0,await this.initializeWallpaper(),document.body.classList.add("is-translucent"))}))}async initializeWallpaper(){let t=await this.getWallpaperPath();t&&window.requestIdleCallback(async()=>{try{let n=await C(t,window.screen.width,window.screen.height,this.settings.blurSize),e=`
                  body {
                      --titlebar-background-focused: transparent;
                  }
                  body::before {
                      width: ${window.screen.width}px;
                      height: ${window.screen.height}px;
                      background-image: url(data:image/jpeg;base64,${n});
                      position: fixed;
                      transform-origin: top left;
                      z-index: -1;
                      background-position: center;
                      background-size: cover;
                      content: "";
                  }
                      
                  .is-translucent:not(.is-fullscreen) .titlebar {
                      background-color: transparent;
                  }`;document.head.appendChild(this.styleEl),this.styleEl.textContent=e,this.setupPositionTracking(e)}catch(n){console.error("Failed to set wallpaper background:",n)}})}setupPositionTracking(t){let n=()=>{let{screenX:h,screenY:o}=window;(this.lastPosition.x!==h||this.lastPosition.y!==o)&&(Object.assign(this.lastPosition,{x:h,y:o}),this.styleEl.textContent=`${t}
                  body::before {
                      transform: translate(${-h}px, ${-o}px);
                  }`),this.frameRequest=requestAnimationFrame(n)},e=()=>{this.resizeTimer&&clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout(n,100)};window.addEventListener("resize",e),this.frameRequest=requestAnimationFrame(n),this.register(()=>{this.frameRequest&&cancelAnimationFrame(this.frameRequest),this.resizeTimer&&clearTimeout(this.resizeTimer),window.removeEventListener("resize",e),this.styleEl.remove()})}async getWallpaperPath(){if(!r.Platform.isWin)return"";try{let{stdout:t}=await this.exec(`powershell -command "(Get-ItemProperty -Path 'HKCU:\\Control Panel\\Desktop' -Name Wallpaper).Wallpaper"`);return t.trim()}catch(t){return""}}},p=class extends r.PluginSettingTab{constructor(i,t){super(i,t),this.plugin=t}display(){let{containerEl:i}=this;i.empty(),r.Platform.isWin?new r.Setting(i).setHeading().setName("Pseudo Mica"):new r.Setting(i).setHeading().setName("Pseudo Mica is disabled on this device").setDesc("Effect only available on Windows."),new r.Setting(i).setName("Blur Intensity").setDesc("Amount of blur applied to the wallpaper background. Higher values may slightly increase initial processing time. Requires restart or settings change to apply.").addSlider(t=>t.setLimits(10,500,10).setValue(this.plugin.settings.blurSize).setDynamicTooltip().onChange(async n=>{this.plugin.settings.blurSize=n,await this.plugin.saveSettings()})).addExtraButton(t=>{t.setIcon("reset").onClick(async()=>{this.plugin.settings.blurSize=f.blurSize,await this.plugin.saveSettings(),this.display()})})}};

/* nosourcemap */